var parent, span, spanimg, header, limitCount, sendList, sendButton,
    eElement, headerDiv, bottext, botinnertext, botimg, crossimg, limitP, limitText, feedback,
    maxImg, ClearImg, exportDiv, emailChat, chatBoxFlag, CaseImg, botConnection, user, feedbackButtons, crossDiv, caseDiv, clearDiv, emailDiv, maxDiv, suggestedActions;



/// <summary>
/// This functions is used to render the bot and creating header for it
/// </summary>
function renderBot(directLineKey, botSecret) {
    //Create object of Bot Connection
    botConnection = new BotChat.DirectLine(
        {
            token: 'YHGK3Pm0iA8.cwA.Lmg.Yhhz3nbNnvKxjRN9h7mfFD-xC80yrwSFPh3Ozywp9Hc',
            webSocket: false
        });

    BotChat.App(
        {
            botConnection: botConnection,
            user: { id: "User" },
            bot: { id: 'mdhwTAQ1|)}kycVKCC7349$' },
            resize: 'detect'
        },
        document.getElementById("botContainer"));

    //refresh bot connection
    setInterval(function () {
        botConnection.refreshToken();
    }, BotConstants.tokenRefreshValue);

    $(".wc-shellinput").attr(BotPageStrConst.placeHolder, BotPageStrConst.askQuesMessage);

    parent = $(".wc-header");
    span = $(".wc-header").children("span");
    span.text("");

    spanimg = document.createElement('div');

    document.getElementsByClassName("wc-header")[0].appendChild(spanimg);
    header = document.getElementsByClassName("wc-header")[0];
    eElement = document.getElementsByClassName("wc-message-from-bot")[0];


    headerDiv = document.createElement('div');
    headerDiv.className = "headerDiv";

    bottext = document.createElement('span');
    bottext.className = "bottext";

    botinnertext = document.createElement('span');

    botinnertext.textContent = BotPageStrConst.mobiHelpMessage;

    botimg = document.createElement('img');
    botimg.setAttribute('src', '../../img/MOBI-Icons/botImage.png');
    botimg.setAttribute('class', 'botimg');

    bottext.appendChild(botinnertext);

    header.appendChild(botimg);
    header.appendChild(bottext);

    if (document.getElementsByClassName('wc-header')) {
        if (document.getElementsByClassName('wc-header')[0]) {
            var chatBotHeader = document.getElementsByClassName('wc-header')[0];
            chatBotHeader.setAttribute('onclick', 'hideBot()');
        }
    }

    crossimg = document.createElement('img');
    crossimg.setAttribute('src', '../../img/MOBI-Icons/botshowhide.svg');
    crossimg.setAttribute('title', 'Close Chat');
    crossimg.setAttribute('id', 'closeChat');
    crossimg.setAttribute('class', 'fullScreen');

    maxImg = document.createElement('img');
    maxImg.setAttribute('src', '../../img/MOBI-Icons/maximize.png');
    maxImg.setAttribute('title', 'Maximize Window');
    maxImg.setAttribute('id', 'maximizeWindow');
    maxImg.setAttribute('class', 'fullScreen chatWindowIconGroup');

    maxDiv = document.createElement('div');
    maxDiv.setAttribute("class", "MaxDiv chatWindowIconGroup");
    maxDiv.setAttribute('onclick', 'fullScreen(event)');
    maxDiv.appendChild(maxImg);


    ClearImg = document.createElement('img');
    ClearImg.setAttribute('src', '../../img/delete.png');
    ClearImg.setAttribute('title', 'Clear Chat');
    ClearImg.setAttribute('id', 'clearChat');
    ClearImg.setAttribute('class', 'fullScreen chatWindowIconGroup');

    clearDiv = document.createElement('div');
    clearDiv.setAttribute("class", "clearDiv chatWindowIconGroup");
    clearDiv.setAttribute('onclick', 'clearChat(event)');
    clearDiv.appendChild(ClearImg);


    //emailChat = document.createElement('img');
    //emailChat.setAttribute('src', '../../images/MOBI-Icons/export.png');
    //emailChat.setAttribute('title', 'Export Conversation');
    //emailChat.setAttribute('id', 'emailChat');
    //emailChat.setAttribute('class', 'fullScreen chatWindowIconGroup');

    //emailDiv = document.createElement('div');
    //emailDiv.setAttribute('class', 'emailDiv chatWindowIconGroup');
    //emailDiv.setAttribute('onclick', 'SendByMail(event)');
    //emailDiv.appendChild(emailChat);

    trayDiv = '<div class="btn-group dropup fullScreen chatWindowIconGroup trayDiv" onclick="openTray()" id="chatBotTray" onclick="openTray()">\
                    <img src="../../img/MOBI-Icons/tray.png"  id="chatBotTrayHandle" class="dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" />\
                    <table class="dropdown-menu">\
                          <tr onclick="openInNewTab(\'https://teams.microsoft.com/dl/launcher/launcher.html?url=%2f_%23%2fl%2fchat%2f0%2f0%3fusers%3d28%3ae4e59149-4bf2-46f7-9fee-7636d48d39f9&type=chat&deeplinkId=1fe70b31-28c4-42d3-bbba-a1d76708367e&directDl=true&msLaunch=true&enableMobilePage=true\')"><td><img src="../../img/MOBI-Icons/microsoft-teams@2x.png" /></td><td><p>Chat with MOBI in Teams</p></td></tr>\
                          <tr role="separator" class="divider"></tr>\
                          <tr onclick="openInNewTab(\'https://join.skype.com/bot/e4e59149-4bf2-46f7-9fee-7636d48d39f9?add\')" style="border-bottom:1px solid #E7EAED;border-top:1px solid #E7EAED;"><td><img src="../../img/MOBI-Icons/skype@2x.png" /></td><td><p>Chat with MOBI in Skype &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p></td></tr>\
                          <tr onclick="SendByMail(event)"><td><img src="../../img/MOBI-Icons/export1@2x.png" /></td><td><p>Export Conversation</p></td></tr>\
                    </table>\
                </div >';

    header.appendChild(crossimg);
    header.appendChild(maxDiv);
    //header.appendChild(emailDiv);
    //header.appendChild(trayDiv);
    header.innerHTML += trayDiv;


    span = document.createElement('div');
    $(".wc-console").removeClass("has-upload-button");

    //collapse bot initially
    chatBoxFlag = 1;

    sendList = document.getElementsByClassName("wc-send")[0];
    sendList.removeChild(sendList.childNodes[0]);
    sendButton = document.createElement("BUTTON");
    sendButton.setAttribute('class', 'sendButton');
    sendButton.setAttribute('id', 'sendMsg');
    sendButton.setAttribute('innerHTML', 'Send');
    sendList.appendChild(sendButton);
    document.getElementsByClassName("sendButton")[0].textContent = "Send";
    document.getElementById('sendMsg').disabled = true;
    document.getElementById('sendMsg').style.color = "#D3D3D3";
    document.getElementById('sendMsg').style.color = "auto";

    limitP = document.createElement('span');
    limitP.setAttribute('class', 'limitText');
    limitText = document.createTextNode("100/100");
    limitP.appendChild(limitText);
    document.getElementsByClassName('wc-console')[0].appendChild(limitP);
    document.getElementsByClassName("wc-shellinput")[0].setAttribute("maxLength", BotConstants.countOfLimit);
    document.getElementsByClassName("wc-shellinput")[0].setAttribute("onkeyup", "limitTextSpan()");
    document.getElementsByClassName("wc-send")[0].setAttribute("title", "Send");

    suggestedActions = document.getElementsByClassName("wc-suggested-actions")[0];
    suggestedActions.addEventListener('DOMNodeInserted', function () {
        if (suggestedActions.getElementsByClassName("wc-hscroll")[0] !== undefined) {
            var positive = suggestedActions.getElementsByClassName("wc-hscroll")[0].getElementsByTagName("button");
            if (positive !== undefined) {
                positive[0].setAttribute("title", "Like");
                positive[1].setAttribute("title", "Dislike");
            }
        }
    });

    document.getElementsByClassName("wc-send")[0].title = BotConstants.sendMessageTitle;
    $(document).on('mouseenter', '.ac-pushButton', function () {
        var text = $(this)[0].textContent;
        $(this)[0].title = text;
    }).on('mouseleave', '.ac-pushButton', function () {
        $(this)[0].title = '';
    });
}

function openInNewTab(url) {
    var win = window.open(url, '_blank');
    win.focus();
}

/// <summary>
/// this function is called when new case button is clicked
/// </summary>
function openTray() {
    var chatBotTrayHandle = document.getElementById("chatBotTrayHandle");
    if (chatBotTrayHandle.getAttribute("aria-expanded") == "true") {
        chatBotTrayHandle.setAttribute("aria-expanded", "false");
        var chatBotTray = document.getElementById("chatBotTray");
        chatBotTray.classList.remove("open");
    }
    else {
        chatBotTrayHandle.setAttribute("aria-expanded", "true");
        var chatBotTray = document.getElementById("chatBotTray");
        chatBotTray.classList.add("open");
    }
    event.stopPropagation();
}

/// <summary>
/// this function is called when new case button is clicked
/// </summary>
//function newCase() {
//    showModal();
//    event.stopPropagation();
//}


/// <summary>
/// show modal for new case functionality
/// </summary>
//function showModal() {
//    $("#myModal").modal();

//}

///// <summary>
///// Send by mail for new case functionality
///// </summary>
//function SendByMailNewCase(event) {
//    SendByMail(event);
//    createNewCase(event);
//}

/// <summary>
/// createNewCase functionality
/// </summary>
//function createNewCase(event) {
//    $('#myModal').modal('hide');
//    clearChat(event);
//    botConnection
//        .postActivity(
//            {
//                from: user,
//                name: 'setNewCase',
//                // provide event name and check for that event in bot
//                type: 'event',
//                value: ''
//            })
//        .subscribe(function (id) {
//            console.log("event sent");
//        });
//    event.stopPropagation();
//}

/// displays the feedback suggested action
function showfeedback() {
    feedback.style.display = "block";
}

/// <summary>
/// Hide bot
/// </summary>
function hideBot() {

    var chatWindowElement = document.getElementsByClassName("wc-chatview-panel");
    var iconList = document.getElementsByClassName('chatWindowIconGroup');
    var elementlistlength = iconList.length;
    document.getElementsByClassName('wc-chatview-panel')[0].style.transition = "all 1s";
    feedback = document.getElementsByClassName('wc-hscroll')[0];
    if (feedback !== undefined) {
        if (feedback.textContent.includes("👎") || feedback.textContent.includes("👍")) {
            feedback.style.display = "none";
            setTimeout(showfeedback, 2500);
        }
    }


    //bot gets open when set to 0
    if (chatBoxFlag === 0) {
        document.getElementsByClassName('wc-chatview-panel')[0].classList.remove('wc-chatview-panel-closed');
        document.getElementsByClassName('wc-message-pane')[0].classList.remove('hideElement');
        document.getElementsByClassName('wc-console')[0].classList.remove('hideElement');
        document.getElementsByClassName('wc-message-pane')[0].classList.add('showElement');
        document.getElementsByClassName('wc-console')[0].classList.add('showElement');
        document.getElementById('closeChat').classList.remove('rotateimg180');
        document.getElementById('closeChat').setAttribute('title', BotPageStrConst.closeChat);

        if ($(".fullScreen").length > 0) {
            chatWindowElement[0].classList.remove('maxScrnDimension');
            chatWindowElement[0].classList.add('minScrnDimension');

        }
        else {
            chatWindowElement[0].classList.remove('minScrnDimension');
            chatWindowElement[0].classList.add('maxScrnDimension');
        }
        document.getElementsByClassName('wc-chatview-panel')[0].classList.add('wc-chatview-panel-open');
        document.getElementById('maximizeWindow').setAttribute('title', 'Minimize Window');

        var iIterator = 0;
        for (; iIterator < elementlistlength; iIterator++) {
            iconList[iIterator].classList.remove('hideIcon');
            iconList[iIterator].classList.add('showIcon');
        }
        chatBoxFlag = 1;
    }
    else {
        document.getElementsByClassName('wc-chatview-panel')[0].classList.remove('wc-chatview-panel-open');
        document.getElementsByClassName('wc-message-pane')[0].classList.remove('showElement');
        document.getElementsByClassName('wc-console')[0].classList.remove('showElement');

        document.getElementsByClassName('wc-message-pane')[0].classList.add('hideElement');
        document.getElementsByClassName('wc-console')[0].classList.add('hideElement');
        document.getElementById('maximizeWindow').setAttribute('title', 'Maximize Window');

        document.getElementsByClassName('wc-chatview-panel')[0].classList.remove('maxScrnDimension');
        document.getElementsByClassName('wc-chatview-panel')[0].classList.add('wc-chatview-panel-closed');
        document.getElementById('closeChat').classList.add('rotateimg180');
        document.getElementById('closeChat').setAttribute('title', BotPageStrConst.openChatText);

        var jIterator = 0;
        for (; jIterator < elementlistlength; jIterator++) {
            iconList[jIterator].classList.remove('showIcon');
            iconList[jIterator].classList.add('hideIcon');
        }

        chatBoxFlag = 0;

    }
}

/// <summary>
/// clear chat functionality
/// </summary>
function clearChat(event) {
    $(".wc-message-from-bot").remove();
    $(".wc-message-from-me").remove();
    $(".wc-message-wrapper").remove();
    $(".wc-message-pane").removeClass("show-actions");
    event.stopPropagation();
}

/// <summary>
/// Increase screen size
/// </summary>
function fullScreen(event) {
    var chatWindow = document.getElementsByClassName("wc-chatview-panel");
    //if bot is of small size
    if ($(".fullScreen").length > 0) {
        $(".fullScreen").addClass("minScreen");
        $(".fullScreen").removeClass("fullScreen");
        chatWindow[0].classList.remove('minScrnDimension');
        chatWindow[0].classList.add('maxScrnDimension');
        $(".modal-dialog").css("height", "92%");
        $(".modal-dialog").css("width", "98%");
        $(".modal-content").css("width", "100%");
        maxImg.setAttribute('title', 'Minimize Window');
        maxImg.setAttribute('src', '../../img/MOBI-Icons/minimize.png');
        event.stopPropagation();
    }
    else {
        $(".minScreen").addClass("fullScreen");
        $(".minScreen").removeClass("minScreen");
        chatWindow[0].classList.remove('maxScrnDimension');
        chatWindow[0].classList.add('minScrnDimension');
        $(".modal-dialog").css("height", "70%");
        $(".modal-dialog").css("width", "30%");
        maxImg.setAttribute('title', 'Maximize Window');
        maxImg.setAttribute('src', '../../img/MOBI-Icons/maximize.png');
        event.stopPropagation();
    }
}

/// <summary>
/// Export chat to mail functionality
/// </summary>
function SendByMail(event) {
    // variable to initialise all the data 
    var textMessages = "";

    // get list of chat messages
    var messageList = document.getElementsByClassName("wc-message-wrapper");

    if (messageList !== null) {
        var messageListLength = messageList.length;
    }

    // get data from each reply and add it to variable

    for (var itrMsg = 0; itrMsg < messageListLength; itrMsg++) {
        var userTextLength;
        if (messageList[itrMsg].children.length > 0) {
            userTextLength = messageList[itrMsg].children[1].outerHTML.length;
            textMessages += messageList[itrMsg].children[1].outerHTML.substr(0, userTextLength - 13) + ":</span></div>";
            textMessages += messageList[itrMsg].children[0].outerHTML + "\n";
        }
    }
    var date = new Date();
    downloadFile("ExportChat" + date + ".docx", textMessages);
    event.stopPropagation();
}


/// <summary>
/// download chat as text file
/// </summary>
function downloadFile(filename, text) {
    var header = "<!DOCTYPE html xmlns:o='urn:schemas-microsoft-com:office:office' " +
        "xmlns:w='urn:schemas-microsoft-com:office:word' " +
        "xmlns='http://www.w3.org/TR/REC-html40'>" +
        "<head><meta charset='utf-8'><title></title></head><body>";
    var footer = "</body></html>";
    var regEx = new RegExp("couldn't send retry", 'g');
    text = text.replace(regEx, 'User');
    text = header + text + footer;
    var element = document.createElement('a');
    var downloadFile = htmlDocx.asBlob(text);
    saveAs(downloadFile, filename);
}

/// <summary>
/// charcter limit
/// <summary>
function limitTextSpan() {
    document.getElementById('sendMsg').style.cursor = "pointer";
    var limitField = document.getElementsByClassName("wc-shellinput")[0];
    var textString = limitField.value;
    if (textString.length > BotConstants.countOfLimit) {
        limitField.value = limitField.value.substring(0, BotConstants.countOfLimit);
    }
    else {
        if (limitField.value === '') {
            limitCount = BotConstants.countOfLimit;
        }
        else {
            limitCount = BotConstants.countOfLimit - textString.length;
            document.getElementById('sendMsg').style.color = "#BA141A";
        }
    }
    if (limitCount === 0) {
        document.getElementsByClassName("limitText")[0].textContent = (BotConstants.countOfLimit - textString.length) + "/" + BotConstants.countOfLimit;
    }
    else {
        document.getElementsByClassName("limitText")[0].textContent = (BotConstants.countOfLimit - textString.length) + "/" + BotConstants.countOfLimit;
    }
    if (limitCount === BotConstants.countOfLimit - 1) {
        document.getElementById('sendMsg').disabled = false;
        document.getElementById('sendMsg').style.cursor = "pointer";
        document.getElementById('sendMsg').style.color = "#BA141A";
    }
    if (limitCount === BotConstants.countOfLimit) {
        document.getElementById('sendMsg').disabled = true;
        document.getElementById('sendMsg').style.cursor = "auto";
        document.getElementById('sendMsg').style.color = "#D3D3D3";

    }
}